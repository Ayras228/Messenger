  Client.cpp
  console_messanger.cpp
  Graphics.cpp
  TextField.cpp
D:\universe\C++\Study_network\SFML Network\TextField.cpp(38,52): warning C4244: аргумент: преобразование "int" в "T", возможна потеря данных
          with
          [
              T=float
          ]
D:\universe\C++\Study_network\SFML Network\TextField.cpp(38,34): warning C4244: аргумент: преобразование "int" в "T", возможна потеря данных
          with
          [
              T=float
          ]
D:\universe\C++\Study_network\SFML Network\TextField.cpp(76,98): warning C4244: аргумент: преобразование "unsigned int" в "T", возможна потеря данных
          with
          [
              T=float
          ]
D:\universe\C++\Study_network\SFML Network\TextField.cpp(76,69): warning C4244: аргумент: преобразование "unsigned int" в "T", возможна потеря данных
          with
          [
              T=float
          ]
D:\universe\C++\Study_network\SFML Network\TextField.cpp(115,98): warning C4244: аргумент: преобразование "unsigned int" в "T", возможна потеря данных
          with
          [
              T=float
          ]
D:\universe\C++\Study_network\SFML Network\TextField.cpp(115,69): warning C4244: аргумент: преобразование "unsigned int" в "T", возможна потеря данных
          with
          [
              T=float
          ]
  Mouse.cpp
D:\universe\C++\Study_network\SFML Network\Mouse.cpp(5,128): warning C4244: аргумент: преобразование "T" в "T", возможна потеря данных
          with
          [
              T=int
          ]
          and
          [
              T=float
          ]
D:\universe\C++\Study_network\SFML Network\Mouse.cpp(5,87): warning C4244: аргумент: преобразование "T" в "T", возможна потеря данных
          with
          [
              T=int
          ]
          and
          [
              T=float
          ]
  Server.cpp
  main_graphics.cpp
  Graphics.h
  SpriteHandler.cpp
  User.cpp
  Window.cpp
x64\Release\Graphics.obj : warning LNK4042: объект указан более одного раза; лишние не учитываются
Client.obj : error LNK2001: неразрешенный внешний символ "__declspec(dllimport) public: static class sf::Time const sf::Time::Zero" (__imp_?Zero@Time@sf@@2V12@B).
Client.obj : error LNK2001: неразрешенный внешний символ "__declspec(dllimport) public: enum sf::Socket::Status __cdecl sf::TcpSocket::connect(class sf::IpAddress const &,unsigned short,class sf::Time)" (__imp_?connect@TcpSocket@sf@@QEAA?AW4Status@Socket@2@AEBVIpAddress@2@GVTime@2@@Z).
Graphics.obj : error LNK2001: неразрешенный внешний символ "__declspec(dllimport) public: static class sf::RenderStates const sf::RenderStates::Default" (__imp_?Default@RenderStates@sf@@2V12@B).
Graphics.obj : error LNK2001: неразрешенный внешний символ "__declspec(dllimport) public: __cdecl sf::Color::Color(unsigned char,unsigned char,unsigned char,unsigned char)" (__imp_??0Color@sf@@QEAA@EEEE@Z).
Graphics.obj : error LNK2001: неразрешенный внешний символ "__declspec(dllimport) public: void __cdecl sf::RenderTarget::draw(class sf::Drawable const &,class sf::RenderStates const &)" (__imp_?draw@RenderTarget@sf@@QEAAXAEBVDrawable@2@AEBVRenderStates@2@@Z).
Graphics.obj : error LNK2001: неразрешенный внешний символ "__declspec(dllimport) public: static bool __cdecl sf::Mouse::isButtonPressed(enum sf::Mouse::Button)" (__imp_?isButtonPressed@Mouse@sf@@SA_NW4Button@12@@Z).
Graphics.obj : error LNK2001: неразрешенный внешний символ "__declspec(dllimport) public: virtual __cdecl sf::Sprite::~Sprite(void)" (__imp_??1Sprite@sf@@UEAA@XZ).
Graphics.obj : error LNK2001: неразрешенный внешний символ "__declspec(dllimport) public: __cdecl sf::Sprite::Sprite(class sf::Sprite const &)" (__imp_??0Sprite@sf@@QEAA@AEBV01@@Z).
TextField.obj : error LNK2001: неразрешенный внешний символ "__declspec(dllimport) public: static class sf::Color const sf::Color::White" (__imp_?White@Color@sf@@2V12@B).
TextField.obj : error LNK2001: неразрешенный внешний символ "__declspec(dllimport) public: void __cdecl sf::Transformable::setPosition(class sf::Vector2<float> const &)" (__imp_?setPosition@Transformable@sf@@QEAAXAEBV?$Vector2@M@2@@Z).
TextField.obj : error LNK2001: неразрешенный внешний символ "__declspec(dllimport) public: bool __cdecl sf::Font::loadFromFile(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)" (__imp_?loadFromFile@Font@sf@@QEAA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z).
TextField.obj : error LNK2001: неразрешенный внешний символ "__declspec(dllimport) public: __cdecl sf::Font::~Font(void)" (__imp_??1Font@sf@@QEAA@XZ).
TextField.obj : error LNK2001: неразрешенный внешний символ "__declspec(dllimport) public: __cdecl sf::Font::Font(void)" (__imp_??0Font@sf@@QEAA@XZ).
TextField.obj : error LNK2001: неразрешенный внешний символ "__declspec(dllimport) public: static class sf::Color const sf::Color::Red" (__imp_?Red@Color@sf@@2V12@B).
TextField.obj : error LNK2001: неразрешенный внешний символ "__declspec(dllimport) public: static class sf::Color const sf::Color::Black" (__imp_?Black@Color@sf@@2V12@B).
TextField.obj : error LNK2001: неразрешенный внешний символ "__declspec(dllimport) public: class sf::Rect<float> __cdecl sf::Shape::getGlobalBounds(void)const " (__imp_?getGlobalBounds@Shape@sf@@QEBA?AV?$Rect@M@2@XZ).
TextField.obj : error LNK2001: неразрешенный внешний символ "__declspec(dllimport) public: void __cdecl sf::Shape::setOutlineThickness(float)" (__imp_?setOutlineThickness@Shape@sf@@QEAAXM@Z).
TextField.obj : error LNK2001: неразрешенный внешний символ "__declspec(dllimport) public: void __cdecl sf::Shape::setOutlineColor(class sf::Color const &)" (__imp_?setOutlineColor@Shape@sf@@QEAAXAEBVColor@2@@Z).
TextField.obj : error LNK2001: неразрешенный внешний символ "__declspec(dllimport) public: void __cdecl sf::Shape::setFillColor(class sf::Color const &)" (__imp_?setFillColor@Shape@sf@@QEAAXAEBVColor@2@@Z).
TextField.obj : error LNK2001: неразрешенный внешний символ "__declspec(dllimport) public: class sf::String __cdecl sf::String::substring(unsigned __int64,unsigned __int64)const " (__imp_?substring@String@sf@@QEBA?AV12@_K0@Z).
TextField.obj : error LNK2001: неразрешенный внешний символ "__declspec(dllimport) public: unsigned __int64 __cdecl sf::String::getSize(void)const " (__imp_?getSize@String@sf@@QEBA_KXZ).
TextField.obj : error LNK2001: неразрешенный внешний символ "__declspec(dllimport) public: class sf::String & __cdecl sf::String::operator+=(class sf::String const &)" (__imp_??YString@sf@@QEAAAEAV01@AEBV01@@Z).
TextField.obj : error LNK2001: неразрешенный внешний символ "__declspec(dllimport) public: class sf::String & __cdecl sf::String::operator=(class sf::String const &)" (__imp_??4String@sf@@QEAAAEAV01@AEBV01@@Z).
TextField.obj : error LNK2001: неразрешенный внешний символ "__declspec(dllimport) public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __cdecl sf::String::toAnsiString(class std::locale const &)const " (__imp_?toAnsiString@String@sf@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBVlocale@4@@Z).
TextField.obj : error LNK2001: неразрешенный внешний символ "__declspec(dllimport) public: __cdecl sf::String::String(unsigned int)" (__imp_??0String@sf@@QEAA@I@Z).
TextField.obj : error LNK2001: неразрешенный внешний символ "__declspec(dllimport) public: __cdecl sf::String::String(char const *,class std::locale const &)" (__imp_??0String@sf@@QEAA@PEBDAEBVlocale@std@@@Z).
TextField.obj : error LNK2001: неразрешенный внешний символ "__declspec(dllimport) public: __cdecl sf::String::String(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,class std::locale const &)" (__imp_??0String@sf@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBVlocale@3@@Z).
TextField.obj : error LNK2001: неразрешенный внешний символ "__declspec(dllimport) public: __cdecl sf::String::String(class sf::String const &)" (__imp_??0String@sf@@QEAA@AEBV01@@Z).
TextField.obj : error LNK2001: неразрешенный внешний символ "__declspec(dllimport) public: void __cdecl sf::RectangleShape::setSize(class sf::Vector2<float> const &)" (__imp_?setSize@RectangleShape@sf@@QEAAXAEBV?$Vector2@M@2@@Z).
TextField.obj : error LNK2001: неразрешенный внешний символ "__declspec(dllimport) public: __cdecl sf::RectangleShape::RectangleShape(class sf::Vector2<float> const &)" (__imp_??0RectangleShape@sf@@QEAA@AEBV?$Vector2@M@1@@Z).
TextField.obj : error LNK2001: неразрешенный внешний символ "__declspec(dllimport) public: unsigned int __cdecl sf::Text::getCharacterSize(void)const " (__imp_?getCharacterSize@Text@sf@@QEBAIXZ).
TextField.obj : error LNK2001: неразрешенный внешний символ "__declspec(dllimport) public: class sf::String const & __cdecl sf::Text::getString(void)const " (__imp_?getString@Text@sf@@QEBAAEBVString@2@XZ).
TextField.obj : error LNK2001: неразрешенный внешний символ "__declspec(dllimport) public: void __cdecl sf::Text::setFillColor(class sf::Color const &)" (__imp_?setFillColor@Text@sf@@QEAAXAEBVColor@2@@Z).
TextField.obj : error LNK2001: неразрешенный внешний символ "__declspec(dllimport) public: void __cdecl sf::Text::setCharacterSize(unsigned int)" (__imp_?setCharacterSize@Text@sf@@QEAAXI@Z).
TextField.obj : error LNK2001: неразрешенный внешний символ "__declspec(dllimport) public: void __cdecl sf::Text::setFont(class sf::Font const &)" (__imp_?setFont@Text@sf@@QEAAXAEBVFont@2@@Z).
TextField.obj : error LNK2001: неразрешенный внешний символ "__declspec(dllimport) public: void __cdecl sf::Text::setString(class sf::String const &)" (__imp_?setString@Text@sf@@QEAAXAEBVString@2@@Z).
TextField.obj : error LNK2001: неразрешенный внешний символ "__declspec(dllimport) public: __cdecl sf::Text::Text(void)" (__imp_??0Text@sf@@QEAA@XZ).
TextField.obj : error LNK2001: неразрешенный внешний символ "__declspec(dllimport) public: __cdecl sf::String::~String(void)" (__imp_??1String@sf@@QEAA@XZ).
TextField.obj : error LNK2001: неразрешенный внешний символ "__declspec(dllimport) public: virtual __cdecl sf::RectangleShape::~RectangleShape(void)" (__imp_??1RectangleShape@sf@@UEAA@XZ).
TextField.obj : error LNK2001: неразрешенный внешний символ "__declspec(dllimport) public: virtual __cdecl sf::Text::~Text(void)" (__imp_??1Text@sf@@UEAA@XZ).
Mouse.obj : error LNK2001: неразрешенный внешний символ "__declspec(dllimport) public: class sf::Vector2<float> const & __cdecl sf::Transformable::getPosition(void)const " (__imp_?getPosition@Transformable@sf@@QEBAAEBV?$Vector2@M@2@XZ).
Mouse.obj : error LNK2001: неразрешенный внешний символ "__declspec(dllimport) public: class sf::Rect<float> __cdecl sf::Sprite::getGlobalBounds(void)const " (__imp_?getGlobalBounds@Sprite@sf@@QEBA?AV?$Rect@M@2@XZ).
Mouse.obj : error LNK2001: неразрешенный внешний символ "__declspec(dllimport) public: static class sf::Vector2<int> __cdecl sf::Mouse::getPosition(class sf::Window const &)" (__imp_?getPosition@Mouse@sf@@SA?AV?$Vector2@H@2@AEBVWindow@2@@Z).
Server.obj : error LNK2001: неразрешенный внешний символ "__declspec(dllimport) public: enum sf::Socket::Status __cdecl sf::TcpListener::accept(class sf::TcpSocket &)" (__imp_?accept@TcpListener@sf@@QEAA?AW4Status@Socket@2@AEAVTcpSocket@2@@Z).
Server.obj : error LNK2001: неразрешенный внешний символ "__declspec(dllimport) public: enum sf::Socket::Status __cdecl sf::TcpListener::listen(unsigned short,class sf::IpAddress const &)" (__imp_?listen@TcpListener@sf@@QEAA?AW4Status@Socket@2@GAEBVIpAddress@2@@Z).
Server.obj : error LNK2001: неразрешенный внешний символ "__declspec(dllimport) public: __cdecl sf::TcpListener::TcpListener(void)" (__imp_??0TcpListener@sf@@QEAA@XZ).
Server.obj : error LNK2001: неразрешенный внешний символ "__declspec(dllimport) public: static class sf::IpAddress const sf::IpAddress::Any" (__imp_?Any@IpAddress@sf@@2V12@B).
Server.obj : error LNK2001: неразрешенный внешний символ "__declspec(dllimport) public: virtual __cdecl sf::TcpListener::~TcpListener(void)" (__imp_??1TcpListener@sf@@UEAA@XZ).
main_graphics.obj : error LNK2001: неразрешенный внешний символ "__declspec(dllimport) public: __cdecl sf::Texture::~Texture(void)" (__imp_??1Texture@sf@@QEAA@XZ).
main_graphics.obj : error LNK2001: неразрешенный внешний символ "__declspec(dllimport) public: __cdecl sf::Texture::Texture(void)" (__imp_??0Texture@sf@@QEAA@XZ).
main_graphics.obj : error LNK2001: неразрешенный внешний символ "__declspec(dllimport) public: void __cdecl sf::Window::display(void)" (__imp_?display@Window@sf@@QEAAXXZ).
main_graphics.obj : error LNK2001: неразрешенный внешний символ "__declspec(dllimport) public: bool __cdecl sf::Window::pollEvent(class sf::Event &)" (__imp_?pollEvent@Window@sf@@QEAA_NAEAVEvent@2@@Z).
main_graphics.obj : error LNK2001: неразрешенный внешний символ "__declspec(dllimport) public: bool __cdecl sf::Window::isOpen(void)const " (__imp_?isOpen@Window@sf@@QEBA_NXZ).
main_graphics.obj : error LNK2001: неразрешенный внешний символ "__declspec(dllimport) public: void __cdecl sf::Window::close(void)" (__imp_?close@Window@sf@@QEAAXXZ).
main_graphics.obj : error LNK2001: неразрешенный внешний символ "__declspec(dllimport) public: void __cdecl sf::RenderTarget::clear(class sf::Color const &)" (__imp_?clear@RenderTarget@sf@@QEAAXAEBVColor@2@@Z).
main_graphics.obj : error LNK2001: неразрешенный внешний символ "__declspec(dllimport) public: __cdecl sf::Sprite::Sprite(void)" (__imp_??0Sprite@sf@@QEAA@XZ).
SpriteHandler.obj : error LNK2001: неразрешенный внешний символ "__declspec(dllimport) public: void __cdecl sf::Transformable::setPosition(float,float)" (__imp_?setPosition@Transformable@sf@@QEAAXMM@Z).
SpriteHandler.obj : error LNK2001: неразрешенный внешний символ "__declspec(dllimport) public: bool __cdecl sf::Texture::loadFromFile(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,class sf::Rect<int> const &)" (__imp_?loadFromFile@Texture@sf@@QEAA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV?$Rect@H@2@@Z).
SpriteHandler.obj : error LNK2001: неразрешенный внешний символ "__declspec(dllimport) public: void __cdecl sf::Sprite::setTextureRect(class sf::Rect<int> const &)" (__imp_?setTextureRect@Sprite@sf@@QEAAXAEBV?$Rect@H@2@@Z).
SpriteHandler.obj : error LNK2001: неразрешенный внешний символ "__declspec(dllimport) public: void __cdecl sf::Sprite::setTexture(class sf::Texture const &,bool)" (__imp_?setTexture@Sprite@sf@@QEAAXAEBVTexture@2@_N@Z).
User.obj : error LNK2001: неразрешенный внешний символ "__declspec(dllimport) public: static class sf::IpAddress __cdecl sf::IpAddress::getPublicAddress(class sf::Time)" (__imp_?getPublicAddress@IpAddress@sf@@SA?AV12@VTime@2@@Z).
User.obj : error LNK2001: неразрешенный внешний символ "__declspec(dllimport) public: static class sf::IpAddress __cdecl sf::IpAddress::getLocalAddress(void)" (__imp_?getLocalAddress@IpAddress@sf@@SA?AV12@XZ).
User.obj : error LNK2001: неразрешенный внешний символ "__declspec(dllimport) public: __cdecl sf::IpAddress::IpAddress(void)" (__imp_??0IpAddress@sf@@QEAA@XZ).
User.obj : error LNK2001: неразрешенный внешний символ "__declspec(dllimport) class std::basic_ostream<char,struct std::char_traits<char> > & __cdecl sf::operator<<(class std::basic_ostream<char,struct std::char_traits<char> > &,class sf::IpAddress const &)" (__imp_??6sf@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@std@@AEAV12@AEBVIpAddress@0@@Z).
User.obj : error LNK2001: неразрешенный внешний символ "__declspec(dllimport) public: class sf::Packet & __cdecl sf::Packet::operator<<(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)" (__imp_??6Packet@sf@@QEAAAEAV01@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z).
User.obj : error LNK2001: неразрешенный внешний символ "__declspec(dllimport) public: class sf::Packet & __cdecl sf::Packet::operator>>(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &)" (__imp_??5Packet@sf@@QEAAAEAV01@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z).
User.obj : error LNK2001: неразрешенный внешний символ "__declspec(dllimport) public: void __cdecl sf::Packet::clear(void)" (__imp_?clear@Packet@sf@@QEAAXXZ).
User.obj : error LNK2001: неразрешенный внешний символ "__declspec(dllimport) public: virtual __cdecl sf::Packet::~Packet(void)" (__imp_??1Packet@sf@@UEAA@XZ).
User.obj : error LNK2001: неразрешенный внешний символ "__declspec(dllimport) public: __cdecl sf::Packet::Packet(void)" (__imp_??0Packet@sf@@QEAA@XZ).
User.obj : error LNK2001: неразрешенный внешний символ "__declspec(dllimport) public: enum sf::Socket::Status __cdecl sf::TcpSocket::receive(class sf::Packet &)" (__imp_?receive@TcpSocket@sf@@QEAA?AW4Status@Socket@2@AEAVPacket@2@@Z).
User.obj : error LNK2001: неразрешенный внешний символ "__declspec(dllimport) public: enum sf::Socket::Status __cdecl sf::TcpSocket::send(class sf::Packet &)" (__imp_?send@TcpSocket@sf@@QEAA?AW4Status@Socket@2@AEAVPacket@2@@Z).
User.obj : error LNK2001: неразрешенный внешний символ "__declspec(dllimport) public: __cdecl sf::TcpSocket::TcpSocket(void)" (__imp_??0TcpSocket@sf@@QEAA@XZ).
User.obj : error LNK2001: неразрешенный внешний символ "__declspec(dllimport) public: virtual __cdecl sf::TcpSocket::~TcpSocket(void)" (__imp_??1TcpSocket@sf@@UEAA@XZ).
Window.obj : error LNK2001: неразрешенный внешний символ "__declspec(dllimport) public: virtual __cdecl sf::RenderWindow::~RenderWindow(void)" (__imp_??1RenderWindow@sf@@UEAA@XZ).
Window.obj : error LNK2001: неразрешенный внешний символ "__declspec(dllimport) public: __cdecl sf::RenderWindow::RenderWindow(void)" (__imp_??0RenderWindow@sf@@QEAA@XZ).
Window.obj : error LNK2001: неразрешенный внешний символ "__declspec(dllimport) public: void __cdecl sf::Window::create(class sf::VideoMode,class sf::String const &,unsigned int,struct sf::ContextSettings const &)" (__imp_?create@Window@sf@@QEAAXVVideoMode@2@AEBVString@2@IAEBUContextSettings@2@@Z).
Window.obj : error LNK2001: неразрешенный внешний символ "__declspec(dllimport) public: __cdecl sf::VideoMode::VideoMode(unsigned int,unsigned int,unsigned int)" (__imp_??0VideoMode@sf@@QEAA@III@Z).
D:\universe\C++\Study_network\SFML Network\x64\Release\SFML Network.exe : fatal error LNK1120: неразрешенных внешних элементов: 77
